package org.nekomanga.presentation.theme.colorschemes

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.ui.graphics.Color

internal object NekoColorScheme : BaseColorScheme() {
    override val lightScheme =
        lightColorScheme(
            primary = Color(0xFFFF124A),
            onPrimary = Color(0xFFFFFFFF),
            primaryContainer = Color(0xFFFFD9DF), // Reverted to original light pink
            onPrimaryContainer = Color(0xFF430018),
            inversePrimary = Color(0xFFFFB1C2),
            secondary = Color(0xFF3B4252),
            onSecondary = Color(0xFFFFFFFF),
            secondaryContainer = Color(0xFFD8DDE4), // UPDATED to a more Basalt-like cool gray
            onSecondaryContainer = Color(0xFF00153D),
            tertiary = Color(0xFF84735E),
            onTertiary = Color(0xFFFFFFFF),
            tertiaryContainer = Color(0xFFFBE4D7),
            onTertiaryContainer = Color(0xFF332A1C),
            background = Color(0xFFFBFBFF),
            onBackground = Color(0xFF1A1C1E),
            surface = Color(0xFFFBFBFF),
            onSurface = Color(0xFF1A1C1E),
            surfaceVariant = Color(0xFFE2E2EC),
            onSurfaceVariant = Color(0xFF45464F),
            surfaceTint = Color(0xFFFF124A),
            inverseSurface = Color(0xFF2F3033),
            inverseOnSurface = Color(0xFFF1F0F4),
            outline = Color(0xFF757680),
            outlineVariant = Color(0xFFC5C6D1),
            error = Color(0xFFBA1A1A),
            onError = Color(0xFFFFFFFF),
            errorContainer = Color(0xFFFFDAD6),
            onErrorContainer = Color(0xFF410002),
            surfaceContainerLowest = Color(0xFFFFFFFF),
            surfaceContainerLow = Color(0xFFF6F6FA),
            surfaceContainer = Color(0xFFF1F1F6),
            surfaceContainerHigh = Color(0xFFECECF1),
            surfaceContainerHighest = Color(0xFFE6E6EB),
            primaryFixed = Color(0xFFFFD9DF), // Reverted
            primaryFixedDim = Color(0xFFFFB1C2),
            onPrimaryFixed = Color(0xFF430018),
            onPrimaryFixedVariant = Color(0xFF8C002B),
            secondaryFixed = Color(0xFFD8DDE4), // UPDATED
            secondaryFixedDim = Color(0xFFAEC4FF),
            onSecondaryFixed = Color(0xFF00153D),
            onSecondaryFixedVariant = Color(0xFF222B4A),
            tertiaryFixed = Color(0xFFFBE4D7),
            tertiaryFixedDim = Color(0xFFE7C6AF),
            onTertiaryFixed = Color(0xFF332A1C),
            onTertiaryFixedVariant = Color(0xFF6B5C45),
            scrim = Color(0xFF000000),
            surfaceBright = Color(0xFFFBFBFF),
            surfaceDim = Color(0xFFDCDCE3),
        )

    override val darkScheme =
        darkColorScheme(
            primary = Color(0xFFFCFC98),
            onPrimary = Color(0xFF313100),
            primaryContainer = Color(0xFF6A6A00),
            onPrimaryContainer = Color(0xFFFCFC98),
            inversePrimary = Color(0xFFA0A000),
            secondary = Color(0xFF80C4FF),
            onSecondary = Color(0xFF003544),
            secondaryContainer = Color(0xFF004F66),
            onSecondaryContainer = Color(0xFFBDEFFF),
            tertiary = Color(0xFFFFB8B8),
            onTertiary = Color(0xFF40000A),
            tertiaryContainer = Color(0xFF613C47),
            onTertiaryContainer = Color(0xFFFFD9E2),
            background = Color(0xFF1A1C1E),
            onBackground = Color(0xFFE2E2E6),
            surface = Color(0xFF1A1C1E),
            onSurface = Color(0xFFE2E2E6),
            surfaceVariant = Color(0xFF45464F),
            onSurfaceVariant = Color(0xFFC5C6D1),
            surfaceTint = Color(0xFFFCFC98),
            inverseSurface = Color(0xFFE2E2E6),
            inverseOnSurface = Color(0xFF1A1C1E),
            outline = Color(0xFF8F909A),
            outlineVariant = Color(0xFF45464F),
            error = Color(0xFFFFB4AB),
            onError = Color(0xFF690005),
            errorContainer = Color(0xFF93000A),
            onErrorContainer = Color(0xFFFFDAD6),
            surfaceContainerLowest = Color(0xFF141518),
            surfaceContainerLow = Color(0xFF1D2022),
            surfaceContainer = Color(0xFF212426),
            surfaceContainerHigh = Color(0xFF2B2F31),
            surfaceContainerHighest = Color(0xFF363A3C),
            primaryFixed = Color(0xFFFCFC98),
            primaryFixedDim = Color(0xFFCFCF7F),
            onPrimaryFixed = Color(0xFF313100),
            onPrimaryFixedVariant = Color(0xFF6A6A00),
            secondaryFixed = Color(0xFFBDEFFF),
            secondaryFixedDim = Color(0xFF60D6FF),
            onSecondaryFixed = Color(0xFF003544),
            onSecondaryFixedVariant = Color(0xFF004F66),
            tertiaryFixed = Color(0xFFFFD9E2),
            tertiaryFixedDim = Color(0xFFFFB8B8),
            onTertiaryFixed = Color(0xFF2D111E),
            onTertiaryFixedVariant = Color(0xFF613C47),
            scrim = Color(0xFF000000),
            surfaceBright = Color(0xFF414347),
            surfaceDim = Color(0xFF1A1C1E),
        )
}
