package org.nekomanga.presentation.theme.colorschemes

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.ui.graphics.Color

internal object NekoColorScheme : BaseColorScheme() {

    // Generated using MaterialKolor Builder version 1.2.1 (103)
    // https://materialkolor.com/?color_seed=FF000000&color_primary=FF000000&dark_mode=false&style=Monochrome&color_spec=SPEC_2025&package_name=com.example.app&expressive=true

    override val lightScheme =
        lightColorScheme(
            primary = Color(0xFF5F5F5F),
            onPrimary = Color(0xFFF9F9F9),
            primaryContainer = Color(0xFFEBEBEB),
            onPrimaryContainer = Color(0xFF575757),
            inversePrimary = Color(0xFFFFFFFF),
            secondary = Color(0xFF5F5F5F),
            onSecondary = Color(0xFFF9F9F9),
            secondaryContainer = Color(0xFFE2E2E2),
            onSecondaryContainer = Color(0xFF525252),
            tertiary = Color(0xFF5F5F5F),
            onTertiary = Color(0xFFF9F9F9),
            tertiaryContainer = Color(0xFFFFFFFF),
            onTertiaryContainer = Color(0xFF626262),
            background = Color(0xFFF9F9F9),
            onBackground = Color(0xFF323232),
            surface = Color(0xFFF9F9F9),
            onSurface = Color(0xFF323232),
            surfaceVariant = Color(0xFFE2E2E2),
            onSurfaceVariant = Color(0xFF5F5F5F),
            surfaceTint = Color(0xFF5F5F5F),
            inverseSurface = Color(0xFF0E0E0E),
            inverseOnSurface = Color(0xFF9D9D9D),
            error = Color(0xFFBB1B1B),
            onError = Color(0xFFFFF7F6),
            errorContainer = Color(0xFFFE4E44),
            onErrorContainer = Color(0xFF570003),
            outline = Color(0xFF7B7B7B),
            outlineVariant = Color(0xFFB2B2B2),
            scrim = Color(0xFF000000),
            surfaceBright = Color(0xFFF9F9F9),
            surfaceContainer = Color(0xFFEEEEEE),
            surfaceContainerHigh = Color(0xFFE8E8E8),
            surfaceContainerHighest = Color(0xFFE2E2E2),
            surfaceContainerLow = Color(0xFFF3F3F3),
            surfaceContainerLowest = Color(0xFFFFFFFF),
            surfaceDim = Color(0xFFDADADA),
            primaryFixed = Color(0xFFEBEBEB),
            primaryFixedDim = Color(0xFFDDDDDD),
            onPrimaryFixed = Color(0xFF444444),
            onPrimaryFixedVariant = Color(0xFF616161),
            secondaryFixed = Color(0xFFE2E2E2),
            secondaryFixedDim = Color(0xFFD4D4D4),
            onSecondaryFixed = Color(0xFF3F3F3F),
            onSecondaryFixedVariant = Color(0xFF5B5B5B),
            tertiaryFixed = Color(0xFFFFFFFF),
            tertiaryFixedDim = Color(0xFFF1F1F1),
            onTertiaryFixed = Color(0xFF505050),
            onTertiaryFixedVariant = Color(0xFF6D6D6D),
        )

    // Generated using MaterialKolor Builder version 1.2.1 (103)
    // https://materialkolor.com/?color_seed=FF6EFFAE&color_primary=FF6EFFAE&color_tertiary=FF3DDA83&color_neutral=FF292929&color_neutralvariant=FF292929&dark_mode=true&style=Rainbow&color_spec=SPEC_2025&package_name=com.example.app
    override val darkScheme =
        darkColorScheme(
            primary = Color(0xFF6CFDAC),
            onPrimary = Color(0xFF005E37),
            primaryContainer = Color(0xFF07BB71),
            onPrimaryContainer = Color(0xFF002C17),
            inversePrimary = Color(0xFF006D40),
            secondary = Color(0xFFB5CCBA),
            onSecondary = Color(0xFF314537),
            secondaryContainer = Color(0xFF2C4032),
            onSecondaryContainer = Color(0xFFAEC5B3),
            tertiary = Color(0xFFC2FFD0),
            onTertiary = Color(0xFF006838),
            tertiaryContainer = Color(0xFF67FEA2),
            onTertiaryContainer = Color(0xFF005F32),
            background = Color(0xFF0E0E0E),
            onBackground = Color(0xFFE7E5E4),
            surface = Color(0xFF0E0E0E),
            onSurface = Color(0xFFE7E5E4),
            surfaceVariant = Color(0xFF262626),
            onSurfaceVariant = Color(0xFF949393),
            surfaceTint = Color(0xFF6CFDAC),
            inverseSurface = Color(0xFFFCF9F8),
            inverseOnSurface = Color(0xFF555555),
            error = Color(0xFFFF7164),
            onError = Color(0xFF4A0002),
            errorContainer = Color(0xFFAC0C12),
            onErrorContainer = Color(0xFFFFB8B0),
            outline = Color(0xFF767575),
            outlineVariant = Color(0xFF484848),
            scrim = Color(0xFF000000),
            surfaceBright = Color(0xFF2C2C2C),
            surfaceContainer = Color(0xFF191A1A),
            surfaceContainerHigh = Color(0xFF1F2020),
            surfaceContainerHighest = Color(0xFF262626),
            surfaceContainerLow = Color(0xFF131313),
            surfaceContainerLowest = Color(0xFF000000),
            surfaceDim = Color(0xFF0E0E0E),
            primaryFixed = Color(0xFF6CFDAC),
            primaryFixedDim = Color(0xFF5CEE9F),
            onPrimaryFixed = Color(0xFF004A29),
            onPrimaryFixedVariant = Color(0xFF00693E),
            secondaryFixed = Color(0xFFD1E8D5),
            secondaryFixedDim = Color(0xFFC3DAC7),
            onSecondaryFixed = Color(0xFF304436),
            onSecondaryFixedVariant = Color(0xFF4C6051),
            tertiaryFixed = Color(0xFF67FEA2),
            tertiaryFixedDim = Color(0xFF57EF96),
            onTertiaryFixed = Color(0xFF004A26),
            onTertiaryFixedVariant = Color(0xFF006A39),
        )
}
