name: Update Rolling Draft Release

on:
  push:
    branches:
      - main

jobs:
  validate_gradle_wrapper:
    name: Validate Gradle Wrapper
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v5

  build_and_release:
    name: Build and Update Draft Release
    needs: validate_gradle_wrapper
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle and Enable Caching
        uses: gradle/actions/setup-gradle@v3

      - name: Write google-services.json
        uses: DamianReeves/write-file-action@v1.3
        with:
          path: app/google-services.json
          contents: ${{ secrets.GOOGLE_SERVICE_JSON }}

      - name: Install Android Build Tools
        run: echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "build-tools;29.0.3"

      - name: Build App
        run: ./gradlew assembleStandardRelease

      - name: Sign APKs
        id: sign_app
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/standard/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Prepare Release Artifacts and Checksums
        id: prep_artifacts
        run: |
          RELEASE_DIR="app/build/outputs/apk/standard/release"
          echo "--- Files in release directory ---"
          ls -l "$RELEASE_DIR"
          echo "------------------------------------"
          # Move and rename the files using the correct path.
          mv "$RELEASE_DIR"/*universal-release-unsigned-signed.apk neko-universal.apk
          mv "$RELEASE_DIR"/*arm64-v8a-release-unsigned-signed.apk neko-arm64-v8a.apk
          mv "$RELEASE_DIR"/*armeabi-v7a-release-unsigned-signed.apk neko-armeabi-v7a.apk
          mv "$RELEASE_DIR"/*x86-release-unsigned-signed.apk neko-x86.apk
          mv "$RELEASE_DIR"/*x86_64-release-unsigned-signed.apk neko-x86_64.apk
          {
            echo 'sha_table<<EOF'
            echo ""
            echo "### Downloads & Checksums"
            echo "| Variant     | SHA-256 Checksum |"
            echo "|:------------|:-----------------|"
            for apk in *.apk; do
            variant=$(echo "$apk" | sed -e 's/neko-//' -e 's/.apk//')
            checksum=$(sha256sum "$apk" | awk '{ print $1 }')
            echo "| \`$variant\` | \`$checksum\` |"
            done
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - name: Get previous release
        id: last_release
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: ${{ github.repository }}
          excludes: 'prerelease,draft'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Custom Changelog
        id: custom_changelog
        run: |
          set -e
          chmod +x ./.github/scripts/generate_changelog.sh
          current_sha=$(git rev-parse --short HEAD)
          echo "CURRENT_SHA=$current_sha" >> $GITHUB_ENV
          prev_release_sha=$(git rev-list -n 1 ${{ steps.last_release.outputs.release }})
          echo "The previous release SHA is: -->$prev_release_sha<--"
          echo "The current SHA is: -->current_sha<--"
          echo "Url to compare: https://api.github.com/repos/nekomangaorg/neko/compare/$prev_release_sha...$current_sha"

          # Call the script with the correct start and end SHAs
          CHANGELOG_CONTENT=$(./.github/scripts/generate_changelog.sh $prev_release_sha $current_sha)

          # Set the multiline output for the release step
          {
            echo 'changelog_body<<EOF'
            echo "$CHANGELOG_CONTENT"
            echo 'EOF'
          } >> "$GITHUB_OUTPUT"

      - name: Update GitHub Draft Release
        uses: ncipollo/release-action@v1
        with:
          tag: latest
          generateReleaseNotes: false
          body: |
            ${{ steps.custom_changelog.outputs.changelog_body }}

            ${{ steps.prep_artifacts.outputs.sha_table }}
          draft: true
          allowUpdates: true
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "*.apk"
